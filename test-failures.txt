My work laptop (kubuntu vm) seems to have pretty consistent failures - might be a good place to explore these. 

I am wondering if this is some aspect of the Undertow-based testing that I am missing...

EncodersSpec:'multipart: file (path)'

groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly 
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (JSON): encodes and decodes properly and returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (TEXT): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (TEXT): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (query string): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (query string): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (cookie): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (cookie): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (cookie): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /foo (cookie): returns content FAILED
groovyx.net.http.JavaHttpPostSpec > POST /date: returns content as Date FAILED
groovyx.net.http.JavaHttpPostSpec > POST /date: returns content as Date FAILED
groovyx.net.http.JavaHttpPostSpec > POST /date: returns content as Date FAILED

groovyx.net.http.JavaHttpPutSpec > PUT /foo (TEXT): returns content FAILED            
groovyx.net.http.JavaHttpPutSpec > PUT /foo (TEXT): returns content FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /foo (query string): returns content FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /foo (query string): returns content FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /foo (cookie): returns content FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /foo (cookie): returns content FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /date: returns content as Date FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /date: returns content as Date FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /date: returns content as Date FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /foo (JSON): returns content FAILED
groovyx.net.http.JavaHttpPutSpec > PUT /foo (JSON): returns content FAILED

groovyx.net.http.EncodersSpec > multipart: file (bytes) FAILED
groovyx.net.http.EncodersSpec > multipart: file (bytes) FAILED
groovyx.net.http.EncodersSpec > multipart: file (bytes) FAILED
groovyx.net.http.EncodersSpec > multipart: file (bytes) FAILED

groovyx.net.http.ApacheEncodersSpec > multipart: file (stream) FAILED
groovyx.net.http.ApacheEncodersSpec > multipart: file (string) FAILED
groovyx.net.http.ApacheEncodersSpec > multipart: file (stream) FAILED
groovyx.net.http.ApacheEncodersSpec > multipart: file (path) FAILED
groovyx.net.http.ApacheEncodersSpec > multipart: file (bytes) FAILED
    java.lang.AssertionError
06:51:05.532 [XNIO-64 I/O-4] DEBUG io.undertow.request.io - UT005013: An IOException occurred
java.io.IOException: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
        at io.undertow.protocols.ssl.SslConduit.notifyReadClosed(SslConduit.java:614)
        at io.undertow.protocols.ssl.SslConduit.terminateReads(SslConduit.java:207)
        at org.xnio.conduits.ConduitStreamSourceChannel.close(ConduitStreamSourceChannel.java:168)
        at org.xnio.IoUtils.safeClose(IoUtils.java:134)
        at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.forceTermination(ReadReadyHandler.java:58)
        at io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler.forceTermination(SslConduit.java:1160)
        at org.xnio.nio.NioSocketConduit.forceTermination(NioSocketConduit.java:105)
        at org.xnio.nio.WorkerThread.run(WorkerThread.java:492)
Caused by: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1666)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1634)
        at sun.security.ssl.SSLEngineImpl.closeInbound(SSLEngineImpl.java:1561)
        at io.undertow.protocols.ssl.SslConduit.notifyReadClosed(SslConduit.java:612)
        ... 7 common frames omitted


        
-------------------------
6:54:57.125 [XNIO-64 I/O-1] DEBUG io.undertow.request.io - UT005013: An IOException occurred
java.io.IOException: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
        at io.undertow.protocols.ssl.SslConduit.notifyReadClosed(SslConduit.java:614)
        at io.undertow.protocols.ssl.SslConduit.terminateReads(SslConduit.java:207)
        at org.xnio.conduits.ConduitStreamSourceChannel.close(ConduitStreamSourceChannel.java:168)
        at org.xnio.IoUtils.safeClose(IoUtils.java:134)
        at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.forceTermination(ReadReadyHandler.java:58)
        at io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler.forceTermination(SslConduit.java:1160)
        at org.xnio.nio.NioSocketConduit.forceTermination(NioSocketConduit.java:105)
        at org.xnio.nio.WorkerThread.run(WorkerThread.java:492)
Caused by: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1666)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1634)
        at sun.security.ssl.SSLEngineImpl.closeInbound(SSLEngineImpl.java:1561)
        at io.undertow.protocols.ssl.SslConduit.notifyReadClosed(SslConduit.java:612)
        ... 7 common frames omitted
:http-builder-ng-apache:check
----------------------------

(WINDOWS)        
groovyx.net.http.NonBlockingCookieStoreSpec > time outs FAILED
    org.spockframework.runtime.ConditionNotSatisfiedError at NonBlockingCookieStoreSpec.groovy:329
